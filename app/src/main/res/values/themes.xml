<resources xmlns:tools="http://schemas.android.com/tools">
    <!-- Base application theme. -->
    <style name="Theme.TestSearchViewWithFragment" parent="Theme.AppCompat.Light.NoActionBar">
        <!-- Primary brand color. -->
        <item name="colorPrimary">@color/purple_500</item>
        <item name="colorPrimaryVariant">@color/purple_700</item>
        <item name="colorOnPrimary">@color/white</item>
        <!-- Secondary brand color. -->
        <item name="colorSecondary">@color/teal_200</item>
        <item name="colorSecondaryVariant">@color/teal_700</item>
        <item name="colorOnSecondary">@color/black</item>
        <!-- Status bar color. -->
        <item name="android:statusBarColor">?attr/colorPrimaryVariant</item>
        <!-- Customize your theme here. -->
    </style>

    <style name="AppTheme.Toolbar" parent="Theme.TestSearchViewWithFragment">
        <!--This line changes the color of text in Toolbar expanded SearchView-->
        <item name="android:textColorPrimary">@color/white</item>
        <!--This line changes the color of icons(back, overflow menu icons) in toolbar expanded SearchView -->
        <item name="android:textColorSecondary">@color/white</item>
        <!--This line changes the hint color of text in Toolbar expanded SearchView-->
        <item name="android:textColorHint">@color/white74</item>
        <!--This line delete hint icon-->
        <item name="searchViewStyle">@style/SearchViewMy</item>
        <!--This line detect custom back button-->
        <item name="android:homeAsUpIndicator">@drawable/ic_back_arrow</item>
    </style>

    <!--This style delete hint icon-->
    <style name="SearchViewMy" parent="Widget.AppCompat.Light.SearchView">
        <item name="searchHintIcon">@null</item>
    </style>


</resources>